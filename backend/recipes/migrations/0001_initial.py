# Generated by Django 3.2 on 2024-01-10 08:24

import colorfield.fields
import core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_to_shopping_cart_date', models.DateTimeField(auto_now=True, verbose_name='Дата добавления в корзину')),
            ],
            options={
                'verbose_name': 'Рецепт в корзине',
                'verbose_name_plural': 'Рецепты в корзине',
                'ordering': ('-id',),
                'abstract': False,
                'default_related_name': 'shopping_cart',
            },
        ),
        migrations.CreateModel(
            name='FavoriteRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_to_favorite_date', models.DateTimeField(auto_now=True, verbose_name='Дата добавления в избранное')),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранные рецепты',
                'ordering': ('add_to_favorite_date',),
                'abstract': False,
                'default_related_name': 'favorites',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Напишите название ингредиента', max_length=200, validators=[core.validators.TwoCharValidator(2), core.validators.CyrillicCharRegexValidator()], verbose_name='Название ингредиента')),
                ('measurement_unit', models.CharField(help_text='Введите единицу измерения', max_length=200, validators=[core.validators.MinMeasurementUnitLenghtValidator(1), core.validators.CyrillicCharRegexValidator()], verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Придумайте название рецепта', max_length=200, validators=[core.validators.validate_recipe_name, core.validators.TwoCharValidator(2)], verbose_name='Название')),
                ('image', models.ImageField(upload_to='recipes/images/', verbose_name='Картинка')),
                ('text', models.TextField(help_text='Опишите рецепт', validators=[core.validators.TwoCharValidator(2)], verbose_name='Описание')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Введите время приготовления рецепта', validators=[core.validators.MinCookingTimeValueValidator(1), core.validators.MaxCookingTimeValueValidator(1000)], verbose_name='Время приготовления (в минутах)')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-pub_date', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Придумай название для тега', max_length=200, unique=True, validators=[core.validators.TwoCharValidator(2), core.validators.CyrillicCharRegexValidator()], verbose_name='Название')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', help_text='Пропишите цвет в HEX формате', image_field=None, max_length=7, samples=None, unique=True, verbose_name='Цвет в HEX')),
                ('slug', models.SlugField(help_text='Введите слаг тега', max_length=200, unique=True, validators=[core.validators.TwoCharValidator(2), core.validators.LatinCharRegexValidator()], verbose_name='Уникальный слаг')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredientAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(validators=[core.validators.MinAmountValidator(1), core.validators.MaxAmountValidator(50000)], verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ingredient', verbose_name='Ингредиент')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Количество ингредиента в рецепте',
                'ordering': ('recipe', 'ingredient'),
            },
        ),
    ]
